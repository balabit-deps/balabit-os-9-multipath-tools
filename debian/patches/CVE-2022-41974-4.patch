From 994811a29332161ec150f1d9822ff460cfc0f316 Mon Sep 17 00:00:00 2001
From: Martin Wilck <mwilck@suse.com>
Date: Wed, 7 Sep 2022 11:32:29 +0200
Subject: [PATCH] multipathd: uxlsnr: fix memory leak handling invalid commands

If a client sends invalid commands with at least one correct keyword,
(e.g "show bogus"), get_cmdvec() returns 0 and c->cmdvec is allocated but
never freed. Fix it by freeing the cmdvec when setting the state to
CLT_SEND.

Signed-off-by: Martin Wilck <mwilck@suse.com>
Suggested-by: Qualys Security Advisory <qsa@qualys.com>
Reviewed-by: Benjamin Marzinski <bmarzins@redhat.com>
---
 multipathd/uxlsnr.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

--- a/multipathd/uxlsnr.c
+++ b/multipathd/uxlsnr.c
@@ -416,6 +416,11 @@ static void set_client_state(struct clie
 	case CLT_SEND:
 		/* reuse these fields for next data transfer */
 		c->len = c->cmd_len = 0;
+		/* cmdvec isn't needed any more */
+		if (c->cmdvec) {
+			free_keys(c->cmdvec);
+			c->cmdvec = NULL;
+		}
 		break;
 	default:
 		break;
@@ -509,8 +514,6 @@ static int client_state_machine(struct c
 			c->error = execute_handler(c, vecs);
 			pthread_cleanup_pop(1);
 			condlog(4, "%s: cli[%d] grabbed lock", __func__, c->fd);
-			free_keys(c->cmdvec);
-			c->cmdvec = NULL;
 			set_client_state(c, CLT_SEND);
 			/* Wait for POLLOUT */
 			return STM_BREAK;
@@ -521,8 +524,6 @@ static int client_state_machine(struct c
 
 	case CLT_WORK:
 		c->error = execute_handler(c, vecs);
-		free_keys(c->cmdvec);
-		c->cmdvec = NULL;
 		set_client_state(c, CLT_SEND);
 		/* Wait for POLLOUT */
 		return STM_BREAK;
